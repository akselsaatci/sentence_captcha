generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id            String       @id @default(uuid())
  name          String
  experiments   Experiment[]
  startTime    DateTime
  endTime      DateTime?
  isItalian Boolean @default(false)
}

model Experiment {
  id              String                        @id @default(uuid())
  userId          String
  user            User                          @relation(fields: [userId], references: [id])
  traditional     TraditionalCaptchaForExperiment[]
  sentence        SentenceCaptchaForExperiment[]
  accuracy        Float
  startTime       DateTime
  endTime         DateTime?
  mistakeCount    Int
  isTraditional   Boolean
  isCompleted     Boolean
  createdAt       DateTime                      @default(now())
  order Int
  succesRate Float?  

  @@index([userId])
}

model TraditionalCaptchaForExperiment {
  id Int @id @default(autoincrement())
  experimentId  String
  experiment    Experiment   @relation(fields: [experimentId], references: [id])
  captchaId    Int 
  captcha       TraditionalCaptchas @relation(fields: [captchaId], references: [id])
  timeSpend Int?
}

model SentenceCaptchaForExperiment {
    id Int @id @default(autoincrement())
  experimentId  String
  experiment    Experiment   @relation(fields: [experimentId], references: [id])
  captchaId    Int 
  captcha       SentenceCaptchas @relation(fields: [captchaId], references: [id])
  userResponse String?
  isSolved Boolean @default(false)
  timeSpend Int?
}

model TraditionalCaptchas {
    id Int @id @default(autoincrement())

  captcha     String
  length      Int
  experiments TraditionalCaptchaForExperiment[]
}

model SentenceCaptchas {
    id Int @id @default(autoincrement())

  captcha     String
  language    Language         @relation(fields: [languageName], references: [name])
  languageName String
  length      Int
  experiments SentenceCaptchaForExperiment[]
}


model Language {
  name       String      @id
  sentences  SentenceCaptchas[]
}

model ErrorLogs {
  id Int @id @default(autoincrement())
  captcha String
  userResponse String
  errorType String
  createdAt DateTime @default(now())
  userId String?
  experimentId String?
}
